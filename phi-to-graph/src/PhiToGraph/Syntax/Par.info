-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from PhiToGraph/Syntax/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pTerm -> Term                               (0)
	%start_pListTerm -> ListTerm                       (1)
	%start_pCommands -> Commands                       (2)
	%start_pCommand -> Command                         (3)
	%start_pListCommand -> ListCommand                 (4)
	%start_pRules -> Rules                             (5)
	%start_pRule -> Rule                               (6)
	%start_pListRule -> ListRule                       (7)
	Ident -> L_Ident                                   (8)
	Integer -> L_integ                                 (9)
	Term -> Ident                                      (10)
	Term -> Ident '->' Term                            (11)
	Term -> '[' ListTerm ']'                           (12)
	ListTerm ->                                        (13)
	ListTerm -> Term                                   (14)
	ListTerm -> Term ',' ListTerm                      (15)
	Commands -> ListCommand                            (16)
	Command -> 'ADD' '(' Integer ')'                   (17)
	Command -> 'BIND' '(' Integer ',' Integer ',' Ident ')'   (18)
	ListCommand ->                                     (19)
	ListCommand -> Command                             (20)
	ListCommand -> Command ',' ListCommand             (21)
	Rules -> ListRule                                  (22)
	Rule -> Term '--' Ident '->' Commands              (23)
	ListRule ->                                        (24)
	ListRule -> Rule                                   (25)
	ListRule -> Rule ';' ListRule                      (26)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	'--'           { PT _ (TS _ 4) }
	'->'           { PT _ (TS _ 5) }
	';'            { PT _ (TS _ 6) }
	'ADD'          { PT _ (TS _ 7) }
	'BIND'         { PT _ (TS _ 8) }
	'['            { PT _ (TS _ 9) }
	']'            { PT _ (TS _ 10) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pTerm    rule  0
	%start_pListTerm rule  1
	%start_pCommands rule  2
	%start_pCommand rule  3
	%start_pListCommand rule  4
	%start_pRules   rule  5
	%start_pRule    rule  6
	%start_pListRule rule  7
	Ident           rule  8
	Integer         rule  9
	Term            rules 10, 11, 12
	ListTerm        rules 13, 14, 15
	Commands        rule  16
	Command         rules 17, 18
	ListCommand     rules 19, 20, 21
	Rules           rule  22
	Rule            rule  23
	ListRule        rules 24, 25, 26

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pTerm -> . Term                              (rule 0)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9

	Ident          goto state 10
	Term           goto state 27

State 1

	%start_pListTerm -> . ListTerm                      (rule 1)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9
	%eof           reduce using rule 13

	Ident          goto state 10
	Term           goto state 25
	ListTerm       goto state 26

State 2

	%start_pCommands -> . Commands                      (rule 2)

	'ADD'          shift, and enter state 20
	'BIND'         shift, and enter state 21
	%eof           reduce using rule 19

	Commands       goto state 23
	Command        goto state 18
	ListCommand    goto state 24

State 3

	%start_pCommand -> . Command                        (rule 3)

	'ADD'          shift, and enter state 20
	'BIND'         shift, and enter state 21

	Command        goto state 22

State 4

	%start_pListCommand -> . ListCommand                (rule 4)

	'ADD'          shift, and enter state 20
	'BIND'         shift, and enter state 21
	%eof           reduce using rule 19

	Command        goto state 18
	ListCommand    goto state 19

State 5

	%start_pRules -> . Rules                            (rule 5)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9
	%eof           reduce using rule 24

	Ident          goto state 10
	Term           goto state 11
	Rules          goto state 16
	Rule           goto state 12
	ListRule       goto state 17

State 6

	%start_pRule -> . Rule                              (rule 6)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9

	Ident          goto state 10
	Term           goto state 11
	Rule           goto state 15

State 7

	%start_pListRule -> . ListRule                      (rule 7)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9
	%eof           reduce using rule 24

	Ident          goto state 10
	Term           goto state 11
	Rule           goto state 12
	ListRule       goto state 13

State 8

	Ident -> . L_Ident                                  (rule 8)

	L_Ident        shift, and enter state 9


State 9

	Ident -> L_Ident .                                  (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8
	'--'           reduce using rule 8
	'->'           reduce using rule 8
	']'            reduce using rule 8
	%eof           reduce using rule 8


State 10

	Term -> Ident .                                     (rule 10)
	Term -> Ident . '->' Term                           (rule 11)

	','            reduce using rule 10
	'--'           reduce using rule 10
	'->'           shift, and enter state 35
	']'            reduce using rule 10
	%eof           reduce using rule 10


State 11

	Rule -> Term . '--' Ident '->' Commands             (rule 23)

	'--'           shift, and enter state 34


State 12

	ListRule -> Rule .                                  (rule 25)
	ListRule -> Rule . ';' ListRule                     (rule 26)

	';'            shift, and enter state 33
	%eof           reduce using rule 25


State 13

	%start_pListRule -> ListRule .                      (rule 7)

	%eof           accept


State 14

	Term -> '[' . ListTerm ']'                          (rule 12)

	'['            shift, and enter state 14
	']'            reduce using rule 13
	L_Ident        shift, and enter state 9

	Ident          goto state 10
	Term           goto state 25
	ListTerm       goto state 32

State 15

	%start_pRule -> Rule .                              (rule 6)

	%eof           accept


State 16

	%start_pRules -> Rules .                            (rule 5)

	%eof           accept


State 17

	Rules -> ListRule .                                 (rule 22)

	%eof           reduce using rule 22


State 18

	ListCommand -> Command .                            (rule 20)
	ListCommand -> Command . ',' ListCommand            (rule 21)

	','            shift, and enter state 31
	';'            reduce using rule 20
	%eof           reduce using rule 20


State 19

	%start_pListCommand -> ListCommand .                (rule 4)

	%eof           accept


State 20

	Command -> 'ADD' . '(' Integer ')'                  (rule 17)

	'('            shift, and enter state 30


State 21

	Command -> 'BIND' . '(' Integer ',' Integer ',' Ident ')'    (rule 18)

	'('            shift, and enter state 29


State 22

	%start_pCommand -> Command .                        (rule 3)

	%eof           accept


State 23

	%start_pCommands -> Commands .                      (rule 2)

	%eof           accept


State 24

	Commands -> ListCommand .                           (rule 16)

	';'            reduce using rule 16
	%eof           reduce using rule 16


State 25

	ListTerm -> Term .                                  (rule 14)
	ListTerm -> Term . ',' ListTerm                     (rule 15)

	','            shift, and enter state 28
	']'            reduce using rule 14
	%eof           reduce using rule 14


State 26

	%start_pListTerm -> ListTerm .                      (rule 1)

	%eof           accept


State 27

	%start_pTerm -> Term .                              (rule 0)

	%eof           accept


State 28

	ListTerm -> Term ',' . ListTerm                     (rule 15)

	'['            shift, and enter state 14
	']'            reduce using rule 13
	L_Ident        shift, and enter state 9
	%eof           reduce using rule 13

	Ident          goto state 10
	Term           goto state 25
	ListTerm       goto state 44

State 29

	Command -> 'BIND' '(' . Integer ',' Integer ',' Ident ')'    (rule 18)

	L_integ        shift, and enter state 42

	Integer        goto state 43

State 30

	Command -> 'ADD' '(' . Integer ')'                  (rule 17)

	L_integ        shift, and enter state 42

	Integer        goto state 41

State 31

	ListCommand -> Command ',' . ListCommand            (rule 21)

	';'            reduce using rule 19
	'ADD'          shift, and enter state 20
	'BIND'         shift, and enter state 21
	%eof           reduce using rule 19

	Command        goto state 18
	ListCommand    goto state 40

State 32

	Term -> '[' ListTerm . ']'                          (rule 12)

	']'            shift, and enter state 39


State 33

	ListRule -> Rule ';' . ListRule                     (rule 26)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9
	%eof           reduce using rule 24

	Ident          goto state 10
	Term           goto state 11
	Rule           goto state 12
	ListRule       goto state 38

State 34

	Rule -> Term '--' . Ident '->' Commands             (rule 23)

	L_Ident        shift, and enter state 9

	Ident          goto state 37

State 35

	Term -> Ident '->' . Term                           (rule 11)

	'['            shift, and enter state 14
	L_Ident        shift, and enter state 9

	Ident          goto state 10
	Term           goto state 36

State 36

	Term -> Ident '->' Term .                           (rule 11)

	','            reduce using rule 11
	'--'           reduce using rule 11
	']'            reduce using rule 11
	%eof           reduce using rule 11


State 37

	Rule -> Term '--' Ident . '->' Commands             (rule 23)

	'->'           shift, and enter state 47


State 38

	ListRule -> Rule ';' ListRule .                     (rule 26)

	%eof           reduce using rule 26


State 39

	Term -> '[' ListTerm ']' .                          (rule 12)

	','            reduce using rule 12
	'--'           reduce using rule 12
	']'            reduce using rule 12
	%eof           reduce using rule 12


State 40

	ListCommand -> Command ',' ListCommand .            (rule 21)

	';'            reduce using rule 21
	%eof           reduce using rule 21


State 41

	Command -> 'ADD' '(' Integer . ')'                  (rule 17)

	')'            shift, and enter state 46


State 42

	Integer -> L_integ .                                (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 43

	Command -> 'BIND' '(' Integer . ',' Integer ',' Ident ')'    (rule 18)

	','            shift, and enter state 45


State 44

	ListTerm -> Term ',' ListTerm .                     (rule 15)

	']'            reduce using rule 15
	%eof           reduce using rule 15


State 45

	Command -> 'BIND' '(' Integer ',' . Integer ',' Ident ')'    (rule 18)

	L_integ        shift, and enter state 42

	Integer        goto state 49

State 46

	Command -> 'ADD' '(' Integer ')' .                  (rule 17)

	','            reduce using rule 17
	';'            reduce using rule 17
	%eof           reduce using rule 17


State 47

	Rule -> Term '--' Ident '->' . Commands             (rule 23)

	';'            reduce using rule 19
	'ADD'          shift, and enter state 20
	'BIND'         shift, and enter state 21
	%eof           reduce using rule 19

	Commands       goto state 48
	Command        goto state 18
	ListCommand    goto state 24

State 48

	Rule -> Term '--' Ident '->' Commands .             (rule 23)

	';'            reduce using rule 23
	%eof           reduce using rule 23


State 49

	Command -> 'BIND' '(' Integer ',' Integer . ',' Ident ')'    (rule 18)

	','            shift, and enter state 50


State 50

	Command -> 'BIND' '(' Integer ',' Integer ',' . Ident ')'    (rule 18)

	L_Ident        shift, and enter state 9

	Ident          goto state 51

State 51

	Command -> 'BIND' '(' Integer ',' Integer ',' Ident . ')'    (rule 18)

	')'            shift, and enter state 52


State 52

	Command -> 'BIND' '(' Integer ',' Integer ',' Ident ')' .    (rule 18)

	','            reduce using rule 18
	';'            reduce using rule 18
	%eof           reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 27
Number of terminals: 12
Number of non-terminals: 18
Number of states: 53
